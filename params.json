{"name":"Angular Multi Select","tagline":"A multi-select directive for AngularJS using a dropdown button with multiple checkboxes. Allows you to update input model dynamically and reset your selection back to the original value.","body":"Features\r\n--\r\n  - Reset checkbox selections to original state\r\n  - Dynamically update the input model\r\n  - Configurable, such as:\r\n    - Set model property to bind to the checkbox status\r\n    - Set orientation of checkboxes\r\n    - Enable / disable checkboxes\r\n    - Set maximum number of items to be displayed on the button label\r\n    - Maximum height of checkbox layer in pixels (will show scrollbar on overflow)\r\n  - Utilizes angularjs filter\r\n  - Responsive to some extent\r\n\r\n![Screenshot](https://raw.githubusercontent.com/isteven/angular-multi-select/master/screenshot.jpg)\r\n  \r\nUsage\r\n--\r\n    <div\r\n        multi-select \r\n        input-model=\"input_list\"          \r\n        item-label=\"firstName lastName\" \r\n        tick-property=\"selected\"  \r\n        output-model=\"output_list\"\r\n        orientation=\"vertical\" \r\n        max-labels=\"4\"\r\n        max-height=\"500\"\r\n        is-disabled=\"multi_select_state\" >\r\n    </div>\r\n    \r\n        // or this one, but not really tested, so be careful with browser compatibility.\r\n\r\n    <multi-select \r\n        ...\r\n        ...\r\n    </multi-select> \r\n\r\nAttributes / Options\r\n--\r\nBelow are the available attributes to configure the multi-select directive:\r\n\r\n##### input-model (REQUIRED)\r\n$scope variable. Array of objects. \r\n<br />Example:\r\n<br />$scope.inputList = [    \r\n&nbsp;&nbsp;&nbsp;&nbsp;{ id: 1, firstName: \"Peter\",    lastName: \"Parker\",     selected: false },\r\n<br />&nbsp;&nbsp;&nbsp;&nbsp;{ id: 2, firstName: \"Mary\",     lastName: \"Jane\",       selected: false },\r\n<br />&nbsp;&nbsp;&nbsp;&nbsp;{ id: 3, firstName: \"Bruce\",    lastName: \"Wayne\",      selected: true },\r\n<br />&nbsp;&nbsp;&nbsp;&nbsp;{ id: 4, firstName: \"David\",    lastName: \"Banner\",     selected: false },\r\n<br />&nbsp;&nbsp;&nbsp;&nbsp;{ id: 5, firstName: \"Natalia\",  lastName: \"Romanova\",   selected: false },\r\n<br />&nbsp;&nbsp;&nbsp;&nbsp;{ id: 6, firstName: \"Clark\",    lastName: \"Kent\",       selected: true }      \r\n];    \r\n\r\n##### item-label (REQUIRED)\r\ninput-model property that you want to display on the button & checkboxes. Separate multiple values by space. \r\n<br />Example: \r\nitem-label=\"firstName lastName\"          \r\n\r\n##### tick-property (REQUIRED):\r\ninput-model property with a boolean value that represent the state of a checkbox. \r\n<br />For example: \r\n - item-ticker is \"selected\"   \r\n    - if selected === true, checkbox will be ticked. \r\n    - If selected === false, checkbox will not be ticked.\r\n - item-ticker is \"isOn\"       \r\n   - if isOn === true, checkbox will be ticked. \r\n   - If isOn === false, checkbox will not be ticked.\r\n\r\n##### output-model:\r\nA $scope variable. If specified, will list all the selected checkboxes model.\r\n\r\n##### orientation ( \"vertical\" | \"horizontal\" )\r\nOrientation of the list of checkboxes. If not specified, the default will be \"vertical\".\r\n\r\n##### max-labels\r\nMaximum number of items that will be displayed in the dropdown button. If not specified, will display all selected items. \r\n<br />Example: \"1\"\r\n<br />- Using the input-model above, then button will display: \"Bruce Wayne, ... [ Selected: 2 ]\"\r\n\r\n##### max-height\r\nMaximum height of the list of checkboxes in pixels. Will show scrollbar on overflow.\r\n<br />Example: \"100\". \r\n\r\n##### is-disabled \r\nExpression to be evaluated. Will disable or enable the checkboxes. \r\n<br />If not specified, the default will be \"false\". \r\n<br />(Similar with ng-disabled, see http://docs.angularjs.org/api/ng/directive/ngDisabled)\r\n\r\nExample\r\n--\r\nDownload all the files into a same folder and open multiselect.htm\r\n<br />Or if you prefer JSfiddle: http://jsfiddle.net/s47RE/\r\n<br />* I don't know why but JSfiddle requires you to click on the caret button. However, the multiselect.htm sample works OK in all browsers I tested.*\r\n\r\nRequirements\r\n--\r\nAngularJS v1.2.15 is used in the script.\r\n\r\nBrowser Compatibility\r\n--\r\nTested on:\r\n- IE8\r\n- Firefox 27\r\n\r\nLicence\r\n--\r\nReleased under the MIT license. \r\n\r\n\r\n\r\n \r\n  \r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}